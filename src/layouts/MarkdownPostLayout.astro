---
import { Image } from "astro:assets";
import { formatedDate } from "../../lib/utils";
import BaseLayout from "./BaseLayout.astro";

const { frontmatter } = Astro.props;
const {
  title,
  description,
  date,
  author,
  image: heroImage,
  tags = [],
} = frontmatter;
---

<BaseLayout pageTitle={title}>
  <main class="mx-auto px-4 sm:px-6 lg:px-8">
    <header
      class:list={[
        "relative rounded-xl overflow-hidden mb-12",
        heroImage
          ? "text-white h-96"
          : "bg-base-200 text-base-content h-auto p-12",
      ]}
    >
      {
        heroImage && (
          <Image
            src={heroImage}
            alt={description}
            widths={[400, 800, 1200]}
            sizes="(max-width: 800px) 100vw, 1200px"
            class="absolute inset-0 w-full h-full object-cover"
          />
        )
      }
      <div class:list={["absolute inset-0", heroImage && "bg-black/50"]}></div>
      <div
        class="relative h-full flex flex-col justify-center items-center text-center p-6"
      >
        <h1 class="text-4xl md:text-5xl font-extrabold mb-4 tracking-tight">
          {title}
        </h1>
        <p class="text-lg md:text-xl opacity-90 max-w-3xl">{description}</p>
        <div class="mt-6 text-sm opacity-80">
          <span>{formatedDate(date)}</span>
          {author && <span class="mx-2">â€¢</span>}
          {author && <span>By {author}</span>}
        </div>
      </div>
    </header>

    <div class="flex flex-wrap gap-3 mb-10 justify-center">
      {
        tags.map((tag: string) => (
          <a
            href={`/tags/${tag}`}
            class="px-3 py-1 text-sm font-medium rounded-full bg-primary/10 text-primary hover:bg-primary/20 transition-colors"
          >
            #{tag}
          </a>
        ))
      }
    </div>

    <article class="prose prose-lg mx-auto">
      <slot />
    </article>
  </main>
</BaseLayout>
